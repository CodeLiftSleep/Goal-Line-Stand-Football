<?xml version="1.0"?>
<doc>
<assembly>
<name>
NFLScheduler
</name>
</assembly>
<members>
<member name="T:NFLScheduler.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:NFLScheduler.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:NFLScheduler.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:NFLScheduler.Scheduler.GetSchedule(System.Int32)">
 <summary>
 Creates a schedule following all appropriate NFL Rules.  No more than 3 consecutive home or away games.  Teams may not play each other in consecutive weeks
 CHECKS:
 1) If the game is a divisional game---ensure the same teams didn't play the week before
 2) Can every team play a game this week if this game gets scheduled---if yes, continue, if no, redo the weekly schedule.
 3) If over 60 attempts are made and a weekly schedule still cannot be made---restart entire schedule over again
 4) 
 </summary>
 <param name="NumGames"></param>
</member>
<member name="M:NFLScheduler.Scheduler.ScheduleDivGames">
 <summary>
 Schedules 1 Home and 1 Away game against each team in the same division
 </summary>
</member>
<member name="M:NFLScheduler.Scheduler.ScheduleInConfGames">
 <summary>
 Each division plays one other division in the same conference each year.
 </summary>
</member>
<member name="M:NFLScheduler.Scheduler.OutofConfGames">
 <summary>
 Schedules out of conference games for each division against another division in the other conference(ie, AFC East Vs. NFC South)
 </summary>
</member>
<member name="M:NFLScheduler.Scheduler.InConfFinish">
<summary>In the NFL, each team plays 12 games in their own conference. 6 games are played against teams in their division(the teams play twice),
4 games are played against a single other division(each team played once), and the remaining two games are played against the other 2 divisions' teams
that finished in the same place in their division(ie, 3rd place team from Div1 plays 3rd place team from Div3 and Div4 because they already are playing</summary> 
</member>
<member name="M:NFLScheduler.Scheduler.EndWithDivisionGames(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
<summary>creates a schedule where the last 2 games in the season are divisional games. 
currently in the NFL the last 2 games each teams play every year are games within
the division. Takes the 4 Div teams from ScheduleDivGames and then schedules 2 games checking 
to make sure they both can be played and are not both the same game</summary>
</member>
<member name="M:NFLScheduler.Scheduler.GetByeWeek">
 <summary>
 There are 12 possible bye week configurations, which range from 6 bye weeks to 9 bye weeks.  This will randomly select a bye week configuration to use for the schedule
 </summary>
</member>
<member name="M:NFLScheduler.Scheduler.CanGameBePlayed(System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 Checks to see if every other team has a game that can be played this week if this game gets scheduled. Returns True if all other teams can play a game and false if they cannot
 </summary>
 <param name="weeknum"></param>
 <param name="Games"></param>
 <param name="Home"></param>
 <param name="Away"></param>
 <returns></returns>
</member>
<member name="M:NFLScheduler.Scheduler.CanNextWeekBePlayed(System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 After each weeks games are scheduled, this Sub checks to make sure each team has a game that can be played the following week. If not, the current week schedule is redone
 </summary>
 <param name="weeknum"></param>
 <param name="Games"></param>
</member>
</members>
</doc>
